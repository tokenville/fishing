#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI-–ø—Ä–æ–º–ø—Ç–∞–º–∏ —Ä—ã–±
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø—Ä–æ–º–ø—Ç–æ–≤ –∏–∑ –ë–î

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
pip install -r requirements.txt

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python example_prompt_management.py
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–∏—Ç—å –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.generators.fish_card_generator import prompt_manager
from src.database.db_manager import init_database

def print_header(title):
    """–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("\n" + "="*60)
    print(f" {title}")
    print("="*60)

def print_fish_prompt(fish_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Ä—ã–±—ã"""
    fish_id, name, emoji, rarity, ai_prompt = fish_data
    print(f"ID: {fish_id}")
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {emoji} {name}")
    print(f"–†–µ–¥–∫–æ—Å—Ç—å: {rarity}")
    if ai_prompt:
        print(f"AI –ü—Ä–æ–º–ø—Ç: {ai_prompt[:100]}...")
    else:
        print("AI –ü—Ä–æ–º–ø—Ç: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    print("-" * 60)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print_header("–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    init_database()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –Ω–æ–≤—ã–º –ø–æ–ª–µ–º ai_prompt")
    
    # 1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã
    print_header("–¢–ï–ö–£–©–ò–ï AI-–ü–†–û–ú–ü–¢–´ –í–°–ï–• –†–´–ë")
    all_prompts = prompt_manager.list_all_prompts()
    
    for fish_data in all_prompts:
        print_fish_prompt(fish_data)
    
    print(f"–í—Å–µ–≥–æ —Ä—ã–± –≤ –±–∞–∑–µ: {len(all_prompts)}")
    
    # 2. –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    print_header("–ü–û–õ–£–ß–ï–ù–ò–ï –ü–†–û–ú–ü–¢–ê –ö–û–ù–ö–†–ï–¢–ù–û–ô –†–´–ë–´")
    fish_name = "–ó–æ–ª–æ—Ç–æ–π –î—Ä–∞–∫–æ–Ω"
    prompt = prompt_manager.get_prompt(fish_name)
    if prompt:
        print(f"üê≤ {fish_name}: {prompt}")
    else:
        print(f"‚ùå –ü—Ä–æ–º–ø—Ç –¥–ª—è '{fish_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 3. –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç –æ–¥–Ω–æ–π —Ä—ã–±—ã
    print_header("–û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–ú–ü–¢–ê –û–î–ù–û–ô –†–´–ë–´")
    new_prompt = "An ancient golden dragon fish with crystalline scales, swimming through molten lava underwater, epic cinematic lighting, mystical fire effects, 4K quality"
    
    success = prompt_manager.update_prompt(fish_name, new_prompt)
    if success:
        print(f"‚úÖ –ü—Ä–æ–º–ø—Ç –¥–ª—è '{fish_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        updated_prompt = prompt_manager.get_prompt(fish_name)
        print(f"–ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç: {updated_prompt}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è '{fish_name}'")
    
    # 4. –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤
    print_header("–ú–ê–°–°–û–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–ú–ü–¢–û–í")
    
    bulk_prompts = {
        "–°—á–∞—Å—Ç–ª–∏–≤–∞—è –ü–ª–æ—Ç–≤–∞": "A cheerful small silver fish with sparkling fins, swimming in crystal clear water, bright natural lighting, joyful underwater scene",
        "–ê–∫—É–ª–∞ –ü—Ä–æ—Ñ–∏—Ç–∞": "A powerful shark with golden fin tips, swimming through treasure-filled waters, dramatic lighting with coin sparkles, success and prosperity theme"
    }
    
    updated_count = prompt_manager.bulk_update_prompts(bulk_prompts)
    print(f"‚úÖ –ú–∞—Å—Å–æ–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ–º–ø—Ç–æ–≤: {updated_count}")
    
    # 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    print_header("–ì–ï–ù–ï–†–ê–¶–ò–Ø –î–ï–§–û–õ–¢–ù–û–ì–û –ü–†–û–ú–ü–¢–ê")
    
    default_prompt = prompt_manager.generate_default_prompt("–õ—É–Ω–Ω—ã–π –ï–¥–∏–Ω–æ—Ä–æ–≥")
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è '–õ—É–Ω–Ω—ã–π –ï–¥–∏–Ω–æ—Ä–æ–≥':")
    print(default_prompt)
    
    # 6. –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print_header("–£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ï–®–ï–ú –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("üí° –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("prompt_manager.clear_image_cache()  # –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –∫–µ—à")
    print("prompt_manager.clear_image_cache('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä—ã–±—ã')  # –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä—ã–±—ã")
    print("\n‚ö†Ô∏è  –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –¥–ª—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ (—Ç—Ä–µ–±—É–µ—Ç OPENROUTER_API_KEY)
    print_header("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–ê–†–¢–û–ß–ö–ò")
    
    api_key = os.getenv("OPENROUTER_API_KEY")
    if api_key:
        from src.generators.fish_card_generator import generate_fish_card_from_db
        from src.database.db_manager import get_fish_by_name
        
        # –ü–æ–ª—É—á–∏–º –¥–∞–Ω–Ω—ã–µ —Ä—ã–±—ã –∏–∑ –ë–î
        fish_data = get_fish_by_name("–ó–æ–ª–æ—Ç–æ–π –î—Ä–∞–∫–æ–Ω")
        
        if fish_data:
            print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è '{fish_name}'...")
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ä—ã–±—ã
                card_image = await generate_fish_card_from_db(fish_data, 125.5, "3–º–∏–Ω 45—Å")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                test_image_path = f"test_card_{fish_name.replace(' ', '_')}.png"
                with open(test_image_path, 'wb') as f:
                    f.write(card_image)
                
                print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: {test_image_path}")
                print(f"üìä –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(card_image)} –±–∞–π—Ç")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: {e}")
        else:
            print(f"‚ùå –†—ã–±–∞ '{fish_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print("‚ö†Ô∏è  OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("   export OPENROUTER_API_KEY='your_api_key_here'")
    
    # 8. –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
    print_header("–ü–û–õ–ï–ó–ù–´–ï –°–û–í–ï–¢–´ –ü–û –†–ê–ë–û–¢–ï –° –ü–†–û–ú–ü–¢–ê–ú–ò")
    print("""
üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –°–û–ó–î–ê–ù–ò–Æ –ü–†–û–ú–ü–¢–û–í:

1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:
   - –û–ø–∏—Å–∞–Ω–∏–µ —Ä—ã–±—ã (—Ü–≤–µ—Ç, —Ñ–æ—Ä–º–∞, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏)
   - –û–∫—Ä—É–∂–µ–Ω–∏–µ (underwater, deep sea, coral reef)
   - –ö–∞—á–µ—Å—Ç–≤–æ (high quality, 4K, professional)
   - –°—Ç–∏–ª—å (realistic, digital art, cinematic)

2. –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:
   - trash: "murky water, low quality, dull colors"
   - common: "clear water, natural lighting" 
   - rare: "beautiful lighting, vibrant colors"
   - epic: "dramatic lighting, magical effects"
   - legendary: "epic lighting, divine aura, mystical atmosphere"

3. –ü—Ä–∏–º–µ—Ä—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤:
   - "A majestic golden whale with crystalline fins, swimming through sunbeams in deep blue ocean, epic cinematic lighting, high quality digital art"
   - "A small colorful tropical fish with iridescent scales, coral reef background, bright natural lighting, underwater photography style"

4. –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤:
   - –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à: prompt_manager.clear_image_cache()
   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

5. –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ bulk_update_prompts() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä—ã–±
   - –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∞—Å—Å–æ–≤—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    """)
    
    print_header("–ì–û–¢–û–í–û!")
    print("üé£ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI-–ø—Ä–æ–º–ø—Ç–∞–º–∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üìñ –ò–∑—É—á–∏—Ç–µ –∫–æ–¥ —ç—Ç–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()